datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  goals         Goal[]
  financialProfile FinancialProfile?
}

model Goal {
  id            String   @id @default(cuid())
  title         String
  targetAmount  Float
  currentAmount Float    @default(0)
  deadline      DateTime
  priority      Int      @default(3)
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  status        GoalStatus @default(ACTIVE)
}

enum GoalStatus {
  ACTIVE
  COMPLETED
  PAUSED
}

model FinancialProfile {
  id            String   @id @default(cuid())
  userId        String   @unique
  user          User     @relation(fields: [userId], references: [id])
  monthlyIncome Float
  monthlyExpenses Float
  creditScore   Int?
  assets        Float    @default(0)
  liabilities   Float    @default(0)
}

model Transaction {
  id            String     @id @default(cuid())
  userId        String
  user          User       @relation(fields: [userId], references: [id])
  amount        Float
  category      TransactionCategory
  date          DateTime
  description   String?
}

model FinancialSimulation {
  id            String     @id @default(cuid())
  userId        String
  goalId        String
  scenarioType  SimulationType
  projectedOutcome Float
  confidenceLevel Float
  createdAt     DateTime   @default(now())
}

enum TransactionCategory {
  INCOME
  HOUSING
  TRANSPORTATION
  FOOD
  UTILITIES
  HEALTHCARE
  SAVINGS
  INVESTMENTS
  ENTERTAINMENT
  MISC
}

enum SimulationType {
  CONSERVATIVE
  MODERATE
  AGGRESSIVE
}

// Extend existing models
model User {
  transactions Transaction[]
  simulations  FinancialSimulation[]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  goals         Goal[]
  transactions  Transaction[]
  financialProfile FinancialProfile?
}

model Goal {
  id            String   @id @default(cuid())
  title         String
  targetAmount  Float
  deadline      DateTime
  priority      Int
  status        GoalStatus
}

model Transaction {
  id            String   @id @default(cuid())
  amount        Float
  category      TransactionCategory
  date          DateTime
}

model FinancialProfile {
  monthlyIncome Float
  assets        Float
  liabilities   Float
  creditScore   Int?
}


